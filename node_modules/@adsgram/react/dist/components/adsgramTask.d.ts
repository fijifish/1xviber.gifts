import { BlockId, EventHandler } from "@adsgram/common";
import React, { JSX } from "react";
export interface TaskProps {
    blockId: BlockId;
    debug?: boolean;
    className?: string;
    children?: React.ReactNode;
    onReward?: EventHandler;
    onBannerNotFound?: EventHandler;
    onTooLongSession?: EventHandler;
    onError?: EventHandler;
}
/**
 * A React component wrapper for the Adsgram Task custom element.
 * Handles initialization and event binding for the Adsgram task functionality.
 *
 * @component
 * @property {TaskProps} props - Component properties
 * @returns {JSX.Element | null} The rendered task element or null if not ready
 * @property {BlockId} props.blockId - The unique identifier for the task block
 * @property {boolean} props.debug - Enable debug mode to get test task from server
 * @property {string} props.className - Additional CSS class names
 * @property {React.ReactNode} props.children - Child elements to render inside the task component
 * @property {EventHandler} props.onReward - Callback for reward events
 * @property {EventHandler} props.onBannerNotFound - Callback for banner not found events
 * @property {EventHandler} props.onTooLongSession - Callback for too long session events
 * @property {EventHandler} props.onError - Callback for error events
 *
 * @example
 * ```tsx
 * import { AdsgramTask } from "@adsgram/react";
 *
 * function Task() {
 *   const handleReward = (event: CustomEvent<string>) => {
 *     console.log("User earned reward:", event.detail);
 *   };
 *
 *   const handleError = (event: CustomEvent<string>) => {
 *     console.error("Task error:", event.detail);
 *   };
 *
 *   return (
 *     <AdsgramTask
 *       blockId="task-123"
 *       className={styles.task}
 *       onReward={handleReward}
 *       onError={handleError}
 *     >
 *       <span slot="reward" className={styles.task__reward}>
 *         1000 coins
 *       </span>
 *       <div slot="button" className={styles.task__button}>
 *         go
 *       </div>
 *       <div slot="claim" className={styles.button_claim}>
 *         claim
 *       </div>
 *       <div slot="done" className={styles.task__button_done}>
 *         done
 *       </div>
 *     </AdsgramTask>
 *   );
 * }
 * ```
 */
export declare const AdsgramTask: ({ blockId, debug, className, onReward, onBannerNotFound, onTooLongSession, onError, children, }: TaskProps) => JSX.Element | null;
